[
  {
    "vulnerability_base_name": "CWE190_Integer_Overflow__char_fscanf_preinc_05",
    "bad_flow": [
      {
        "name": "CWE190_Integer_Overflow__char_fscanf_preinc_05_bad",
        "address": "001013c9",
        "external": false,
        "code": "\nvoid FUN_001013c9(void)\n\n{\n  long in_FS_OFFSET;\n  char local_12;\n  char local_11;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_12 = ' ';\n  if (DAT_00104010 != 0) {\n    __isoc99_fscanf(stdin,&DAT_00102008,&local_12);\n  }\n  if (DAT_00104010 != 0) {\n    local_12 = local_12 + '\\x01';\n    local_11 = local_12;\n    FUN_0010186b((int)local_12);\n  }\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n"
      },
      {
        "name": "FUN_0010186b",
        "address": "0010186b",
        "external": false,
        "code": "\nvoid FUN_0010186b(char param_1)\n\n{\n  printf(\"%02x\\n\",(ulong)(uint)(int)param_1);\n  return;\n}\n\n",
        "edge": {
          "from": "FUN_001013c9",
          "to": "FUN_0010186b",
          "site": "00101435"
        }
      },
      {
        "name": "printf",
        "address": "001011e0",
        "external": true,
        "code": "",
        "edge": {
          "from": "FUN_0010186b",
          "to": "printf",
          "site": "00101891"
        }
      }
    ],
    "good_flow": [
      {
        "name": "goodB2G1",
        "address": "00101451",
        "external": false,
        "code": "\nvoid FUN_00101451(void)\n\n{\n  long in_FS_OFFSET;\n  char local_12;\n  char local_11;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_12 = ' ';\n  if (DAT_00104010 != 0) {\n    __isoc99_fscanf(stdin,&DAT_00102008,&local_12);\n  }\n  if (DAT_0010402c == 0) {\n    if (local_12 == '\\x7f') {\n      FUN_001016f1(\"data value is too large to perform arithmetic safely.\");\n    }\n    else {\n      local_12 = local_12 + '\\x01';\n      local_11 = local_12;\n      FUN_0010186b((int)local_12);\n    }\n  }\n  else {\n    FUN_001016f1(\"Benign, fixed string\");\n  }\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n"
      },
      {
        "name": "FUN_0010186b",
        "address": "0010186b",
        "external": false,
        "code": "\nvoid FUN_0010186b(char param_1)\n\n{\n  printf(\"%02x\\n\",(ulong)(uint)(int)param_1);\n  return;\n}\n\n",
        "edge": {
          "from": "FUN_00101451",
          "to": "FUN_0010186b",
          "site": "001014d6"
        }
      },
      {
        "name": "printf",
        "address": "001011e0",
        "external": true,
        "code": "",
        "edge": {
          "from": "FUN_0010186b",
          "to": "printf",
          "site": "00101891"
        }
      }
    ]
  }
]