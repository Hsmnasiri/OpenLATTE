# Figure 10(a): Template for the start prompt
START_PROMPT = """
As a program analyst, I give you snippets of C code generated by decompilation, using <{function}> as the taint source, and the <{parameter}> parameter marked as the taint label to extract the taint data flow. Pay attention to the data alias and tainted data operations. Output in the form of data flows.

<Code to be analyzed>
{code_snippet}
"""

# Figure 10(b): Template for the middle prompt
MIDDLE_PROMPT = """
Continue to analyze function according to the above taint analysis results. Pay attention to the data alias and tainted data operations. {new_source_note}

<Code to be analyzed>
{code_snippet}
"""
# Note for Middle Prompt: If the current function introduces a new source:
NEW_SOURCE_NOTE = "(Note the new taint source <{function}> and the <{parameter}> parameter marked as the taint label.)"


# Figure 10(c): Template for the end prompt
END_PROMPT = """
Based on the above taint analysis results, analyze whether the code has vulnerabilities. If there is a vulnerability, please explain what kind of vulnerability according to CWE.
"""